import { useParams, useNavigate } from "react-router-dom";
import { useEffect, useState } from "react";
import axios from "axios";
import Navbar from "../../components/user/Navbar";
import io from "socket.io-client";
//‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ‡∏ó‡∏≥ modal
import toast from "react-hot-toast";
const socket = io("http://localhost:3000"); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏≤‡∏° URL backend ‡∏à‡∏£‡∏¥‡∏á

const ViewBill = () => {
  const { order_code } = useParams();
  const navigate = useNavigate();
  const [order, setOrder] = useState(null);
  const [loading, setLoading] = useState(false);
  const [showCancelModal, setShowCancelModal] = useState(false);

   // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• order ‡∏ï‡∏≠‡∏ô‡πÅ‡∏£‡∏Å
  useEffect(() => {
    axios
      .get(`http://localhost:3000/api/user/viewOrder-list/${order_code}`)
      .then((res) => setOrder(res.data))
      .catch(() => alert("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏µ‡πâ"));
  }, [order_code]);

  // ‡∏ü‡∏±‡∏á event order_status_updated ‡πÅ‡∏ö‡∏ö realtime
  useEffect(() => {
    const handleStatusUpdate = ({ orderId, status }) => {
      // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ orderId ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö order ‡∏Ç‡∏≠‡∏á user ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      if (order?.order?.order_id === orderId) {
        setOrder((prevOrder) => ({
          ...prevOrder,
          order: {
            ...prevOrder.order,
            status,
          },
        }));
        // toast.success(`‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏õ‡πá‡∏ô: ${status}`);
      }
    };

    socket.on("order_status_updated", handleStatusUpdate);

    return () => {
      socket.off("order_status_updated", handleStatusUpdate);
    };
  }, [order]);

//   useEffect(() => {
//   const handleStatusUpdate = ({ orderId, status }) => {
//     if (order?.order?.order_id === orderId) {
//       setOrder((prevOrder) => ({
//         ...prevOrder,
//         order: { ...prevOrder.order, status },
//       }));
//       toast.success(`‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏õ‡πá‡∏ô: ${status}`);
//     }
//   };

//   socket.on("order_status_updated", handleStatusUpdate);
//   return () => socket.off("order_status_updated", handleStatusUpdate);
// }, [order]);

  const handleCancelOrder = async () => {
    setLoading(true);
    try {
      await axios.put(
        `http://localhost:3000/api/user/viewOrder-list/cancel-order/${order_code}`,
        {
          status: "cancelled",
        }
      );

      setOrder((prevOrder) => ({
        ...prevOrder,
        order: { ...prevOrder.order, status: "cancelled" },
      }));

      sessionStorage.removeItem("order_code");
      toast.error("‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!");
      setShowCancelModal(false);
      navigate(`/user-menu/table/${order?.order?.table_number}`);
    } catch (error) {
      console.error("‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", error);
      alert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ");
    } finally {
      setLoading(false);
    }
  };


  const handleConfirmOrder = async () => {
    if (!window.confirm("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÅ‡∏•‡πâ‡∏ß?")) return;
    setLoading(true);
    try {
      await axios.put(
        `http://localhost:3000/api/user/confirm-order/${order_code}`,
        {
          status: "completed",
        }
      );
      setOrder((prevOrder) => ({
        ...prevOrder,
        order: { ...prevOrder.order, status: "completed" },
      }));
      alert("‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
    } catch (error) {
      console.error("‚ùå ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", error);
      alert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÑ‡∏î‡πâ");
    } finally {
      setLoading(false);
    }
  };

  if (!order) return <p className="text-center py-10">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</p>;

  const { order: orderInfo, items } = order;

  const formatPrice = (num) =>
    new Intl.NumberFormat("th-TH", {
      style: "currency",
      currency: "THB",
    }).format(num);

  const statusMap = {
    pending: { text: "‚è≥ ‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£", color: "bg-yellow-100 text-yellow-800" },
    preparing: {
      text: "üë®‚Äçüç≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏≠‡∏≤‡∏´‡∏≤‡∏£",
      color: "bg-blue-100 text-blue-800",
    },
    ready: { text: "‚úÖ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü", color: "bg-green-100 text-green-800" },
    completed: { text: "‚úîÔ∏è ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô", color: "bg-green-100 text-green-800" },
    cancelled: { text: "‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÅ‡∏•‡πâ‡∏ß", color: "bg-red-100 text-red-800" },
  };

  const currentStatus = statusMap[orderInfo.status] || {
    text: "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö",
    color: "bg-gray-100 text-gray-800",
  };

  const canCancel = orderInfo.status === "pending";
  const canConfirm = orderInfo.status === "ready";
  const totalPrice = formatPrice(parseFloat(orderInfo.total_price) || 0);

  return (
    <div className="min-h-screen bg-gradient-to-br from-orange-50 to-orange-100">
      <Navbar />
      <div className="container mx-auto px-4 py-8 pt-20">
        <div className="bg-gradient-to-r from-orange-500 to-orange-600 text-white rounded-xl p-6 shadow-xl relative">
          <div className="absolute top-4 right-4">
            <span
              className={`px-4 py-2 rounded-full text-sm font-semibold shadow-lg ${currentStatus.color}`}
            >
              {currentStatus.text}
            </span>
          </div>
          <h2 className="text-3xl font-bold mb-2">üßæ ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô</h2>
          <p className="text-lg text-orange-100 mb-4">
            ‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠:{" "}
            <span className="font-semibold text-white">
              {orderInfo.order_id}
            </span>
          </p>
          <div className="flex flex-wrap md:flex-nowrap items-center justify-start gap-x-8 gap-y-2 mt-4 text-sm text-orange-100">
            <div className="flex items-center gap-2 bg-white/10 px-3 py-1 rounded-full">
              <span>üìå</span> ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ï‡πä‡∏∞: {orderInfo.table_number}
            </div>
            <div className="flex items-center gap-2 bg-white/10 px-3 py-1 rounded-full">
              <span>üìÖ</span> ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà/‡πÄ‡∏ß‡∏•‡∏≤:{" "}
              {new Date(orderInfo.order_time).toLocaleString("th-TH")}
            </div>
          </div>
        </div>

        <div className="mt-8 space-y-4">
          <h3 className="text-2xl font-bold text-orange-800 mb-6 text-center">
            üçΩÔ∏è ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á
          </h3>
          {items.map((item, i) => (
            <div
              key={i}
              className="bg-white rounded-xl shadow-lg border border-orange-100 overflow-hidden"
            >
              <div className="flex items-center p-6">
                <div className="w-12 h-12 bg-gradient-to-br from-orange-400 to-orange-500 rounded-full flex items-center justify-center text-white font-bold text-lg">
                  {i + 1}
                </div>
                <div className="flex-1 ml-6">
                  <h4 className="text-xl font-bold text-orange-800 mb-2">
                    {item.menu_name}
                  </h4>
                  <div className="flex gap-6 text-sm text-gray-600">
                    <div className="flex gap-1">
                      <span className="text-orange-500">üçΩÔ∏è</span> ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô:{" "}
                      <span className="font-semibold text-orange-700">
                        {item.quantity}
                      </span>
                    </div>
                    <div className="flex gap-1">
                      <span className="text-orange-500">üí∞</span> ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢:{" "}
                      <span className="font-semibold text-orange-700">
                        {formatPrice(item.price)}
                      </span>
                    </div>
                  </div>
                </div>
                <div className="text-right">
                  <div className="text-2xl font-bold text-orange-600">
                    {formatPrice(item.price * item.quantity)}
                  </div>
                  <div className="text-sm text-gray-500 mt-1">‡∏£‡∏ß‡∏°</div>
                </div>
              </div>
            </div>
          ))}
        </div>

        <div className="mt-8 bg-white rounded-xl shadow-xl border-2 border-orange-200">
          <div className="bg-gradient-to-r from-orange-500 to-orange-600 text-white p-4">
            <h3 className="text-xl font-bold text-center">üí∏ ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°</h3>
          </div>
          <div className="p-6">
            <div className="flex justify-between mb-4">
              <span className="text-lg text-gray-600">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:</span>
              <span className="text-lg font-semibold text-orange-700">
                {items.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
              </span>
            </div>
            <div className="flex justify-between mb-4">
              <span className="text-lg text-gray-600">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:</span>
              <span className="text-lg font-semibold text-orange-700">
                {items.reduce((sum, item) => sum + item.quantity, 0)} ‡∏´‡∏ô‡πà‡∏ß‡∏¢
              </span>
            </div>
            <div className="border-t-2 border-orange-200 pt-4">
              <div className="flex justify-between">
                <span className="text-2xl font-bold text-orange-800">
                  ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:
                </span>
                <span className="text-3xl font-bold text-orange-600 bg-orange-50 px-4 py-2 rounded-lg">
                  {totalPrice}
                </span>
              </div>
            </div>
          </div>
        </div>

        {(canCancel || canConfirm) && (
          <div className="mt-8 flex flex-col sm:flex-row gap-4 justify-center">
            {canCancel ? (
              <button
                onClick={() => setShowCancelModal(true)}
                disabled={loading}
                className={`${
                  loading
                    ? "bg-red-300 cursor-not-allowed"
                    : "bg-red-500 hover:bg-red-600"
                } text-white font-bold py-4 px-8 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300`}
              >
                {loading ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å..." : "‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠"}
              </button>
            ) : (
              <>
                <button
                  disabled
                  className="bg-red-300 cursor-not-allowed text-white font-bold py-4 px-8 rounded-xl shadow-lg"
                >
                  ‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
                </button>
                <p className="text-sm text-red-600 mt-2 text-center">
                  ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ô‡∏µ‡πâ
                </p>
              </>
            )}

            {canConfirm && (
              <button
                onClick={handleConfirmOrder}
                disabled={loading}
                className="bg-green-500 hover:bg-green-600 disabled:bg-green-300 text-white font-bold py-4 px-8 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300"
              >
                {loading ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô..." : "‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß"}
              </button>
            )}
          </div>
        )}

        {showCancelModal && (
          <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50">
            <div className="bg-white p-6 rounded-xl max-w-sm w-full shadow-xl">
              <h2 className="text-xl font-bold text-red-600 text-center mb-4">
                ‚ö†Ô∏è ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
              </h2>
              <p className="text-gray-700 text-center mb-6">
                ‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£{" "}
                <span className="font-semibold">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</span> ‡∏ô‡∏µ‡πâ?
              </p>
              <div className="flex justify-center gap-4">
                <button
                  onClick={() => setShowCancelModal(false)}
                  className="px-4 py-2 bg-gray-300 rounded hover:bg-gray-400"
                  disabled={loading}
                >
                  ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                </button>
                <button
                  onClick={async () => {
                    await handleCancelOrder();
                    setShowCancelModal(false);
                  }}
                  className="px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600"
                  disabled={loading}
                >
                  ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
                </button>
              </div>
            </div>
          </div>
        )}

        <div className="text-center mt-8 p-6 bg-white/50 backdrop-blur-sm rounded-xl">
          <div className="text-lg font-semibold text-orange-700 mb-2">
            üôè ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£
          </div>
          <div className="text-sm text-orange-600">
            Thank you for your order ‚Ä¢ ‡∏´‡∏ß‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
          </div>
        </div>
      </div>
    </div>
  );
};

export default ViewBill;